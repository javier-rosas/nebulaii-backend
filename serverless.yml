org: javier0rosas
app: nebulaii-backend
service: nebulaii-backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  httpApi:
    cors: true
  logs:
    httpApi: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: "arn:aws:s3:::nebulaii-test/*"


custom:
  serverless-offline:
    httpPort: 4000


package:
  individually: true

functions:
  auth:
    handler: src/auth/handler.handler
    events:
      - httpApi:
          path: /auth
          method: post
  upload:
    handler: src/upload/handler.handler
    events:
      - httpApi: 
          path: /upload
          method: get
  embedding:
    handler: src/embedding/handler.handler
    events:
      - httpApi: 
          path: /embedding
          method: get
    timeout: 60
  search:
    handler: src/search/handler.handler
  payments:
    handler: src/payments/handler.handler
  mongo:
    handler: src/mongo/handler.handler
    events:
      - httpApi:
          path: /users
          method: post
      - httpApi:
          path: /users/{userEmail}/files
          method: get
      - httpApi:
          path: /users/{userEmail}/files/{filename}
          method: get
      - httpApi:
          path: /users/{userEmail}/files/{filename}
          method: delete
  process-document:
    runtime: python3.9
    handler: src/process-document/handler.handler
    events:
      - httpApi:
          path: /process-document
          method: get

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-plugin-include-dependencies


